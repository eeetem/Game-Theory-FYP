PARAMATERS:

GRID_SIZE = 100
NEIGHBOURHOOD_SIZE = 3x3
SAMPLE_COUNT = GRID_SIZE*GRID_SIZE i.e total population
FERMI_DIRAC_TEMP = 0.1
STRATEGY_INTERPOLATION_FACTOR = 0.7
REPUTATION_INTERPOLATION_FACTOR = 0.3
MUTATION_FACTOR = 0.1



PSEUDOCODE:


Initialise GRID_SIZExGRID_SIZE grid;
Initial Values:
Agent CoopFactor = random(0,1);
Agent ReputationFactor = random(-1,1);
Agent NeighbourReputations[] = <0.5,0.5,....,0.5>



Generation Loop:


- Tally Score
Set score of all agents to 0;
for each pair of neighbouring agents A and B:
	
	coopA = A.Playgame(B);//described below
	coopB = B.Playgame(A);
	if (coopA && coopB):
		A.score +=3;
		B.score +=3;
		
	else if (coopA && !coopB):
		B.score +=5;
	
	else if (coopB && !coopA):
		A.score +=5;
	
	else:
		A.score +=1;
		B.score +=1;
	
	
	A.
	
	
- Adjusting reputation for A after a game with B

(B,coopB);//descibred below
	B.AdjustReputation(A,coopA);
	
	
- Adjust Strategy

for SAMPLE_COUNT of random samples of agent A:
	pick random neighbour B
	CopyChance = FermiDirac(A,B,FERMI_DIRAC_TEMP);
	if(random(CopyChance)):
		A.UpdateStrategy(B);//descibred below
		
	
	
- Play game as agent A against agent B

if A.ReputationFactor > 0:
	CoopValue = Lerp from A.CoopFactor to A.NeighbourReputations[B] by A.ReputationFactor
else:
	PoisitiveIncreaseIfReputationFactorWasAboveZero = A.NeighbourReputations[B] - A.CoopFactor > 0;
	
	LerpTarget = PoisitiveIncreaseIfReputationFactorWasAboveZero ? 0 : 1;
	
	MaximumPermissibleDistance = abs(A.NeighbourReputations[B] - A.CoopFactor)
	TargetDistance = abs(LerpTarget - A.CoopFactor)
	
	if(TargetDistance>MaxDistnace):
		LerpTarget = A.CoopFactor + (positiveChangeForRep ? -maxDist : maxDist)
		
	CoopValue = Lerp from A.CoopFactor to LerpTarget by A.ReputationFactor
	
	
if CoopValue > 0.5:
	return True;//cooperate
else:
	return False
	
- Update strategy of agent A based on agent B

A.CoopFactor = Lerp from A.CoopFactor to B.CoopFactor by STRATEGY_INTERPOLATION_FACTOR
A.CoopFactor += random(-MUTATION_FACTOR,MUTATION_FACTOR)
Clamp A.CoopFactor between 0 and 1


A.ReputationFactor = Lerp from A.ReputationFactor to B.ReputationFactor by STRATEGY_INTERPOLATION_FACTOR
A.ReputationFactor += random(-MUTATION_FACTOR,MUTATION_FACTOR)
Clamp A.ReputationFactor between -1 and 1
	
	
	
- Adjusting reputation for A after a game with B in which coopB defines wheter B cooperated or not.

TargetReputation = coopB ? 1 : 0
A.NeighbourReputations[B] = Lerp from A.NeighbourReputations[B] to TargetReputation by REPUTATION_INTERPOLATION_FACTOR
Clamp A.NeighbourReputations[B] between 0 and 1
	
	